	/**
	 * Creates a new browser I/O request.
	 * @param browser The VFS browser instance
	 * @param path1 The first path name to operate on
	 * @param path2 The second path name to operate on
	 * @param loadInfo A two-element array filled out by the request;
	 * element 1 is the canonical path, element 2 is the file list.
	 */
	AbstractBrowserTask(VFSBrowser browser,
		Object session, VFS vfs, String path1, String path2,
		Object[] loadInfo, Runnable awtTask)
	{
		this.browser = browser;
		this.session = session;
		this.vfs = vfs;
		this.path1 = path1;
		this.path2 = path2;
		this.loadInfo = loadInfo;
		if (awtTask != null)
		{
			MyTaskListener listener = new MyTaskListener(awtTask);
			TaskManager.instance.addTaskListener(listener);
		}
	}
<<<55,org/experiment/editor/browser/AbstractBrowserTask.java, constructor
	/**
	 * Creates a new browser I/O request.
	 * @param browser The VFS browser instance
	 * @param path The first path name to operate on
	 */
	AbstractBrowserTask(VFSBrowser browser,
		Object session, VFS vfs, String path, Runnable awtTask)
	{
		this.browser = browser;
		this.session = session;
		this.vfs = vfs;
		this.path = path;
		if (awtTask != null)
		{
			MyTaskListener listener = new MyTaskListener(awtTask);
			TaskManager.instance.addTaskListener(listener);
		}
	}
<<<40,org/experiment/editor/browser/AbstractBrowserTask.java, constructor
